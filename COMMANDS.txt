PHOENIX

DUAL MINING

PhoenixMiner.exe -pool ssl://eu1.ethermine.org:5555 -pool2 ssl://us1.ethermine.org:5555 -wal YourEthWalletAddress.WorkerName -proto 3 -dpool blake2s.eu.nicehash.com:3361 -dwal YourBtcWalletAddress -dcoin blake2s
https://phoenixminer.org/documentation/quick-start/


#Turn on AMD compute
-acm

Mining Intensity
-mi (0 to 14) 12 default

-gt (4 to 400)



Dual mining intensity
-sci (1 to 1000)

-clKernel (0 to 3) genereic, optimized, alternative, turbo

-clgreen (0 or 1 yes)

-clNew (0 or 1)
Use new AMD kernels


-clf 0 never, 1 yes, 
AMD Kernel sync

-minRigSpeed (n MH/s)

-gpow (0-100)

-altinit
alternate way to initialize AMD cards

-config <name>
load config file

-tt
fan target temp

-fanmin <n>

-fanmax <n>

-powlim (-75 - 75)

-cclock <n> MHZ (0 default)

-cvddc <v> core voltage



acm
Turn on AMD compute mode on the supported GPUs. This is equivalent of pressing 'y' in the miner console.

-mi <n>
Set the mining intensity (0 to 14; 12 is the default for the new kernels). You may specify this option per-GPU.

-gt <n>
Set the GPU tuning parameter (6 to 400). The default is 15. You can change the tuning parameter interactively with the '+' and '-' keys in the miner's console window. If you don't specify -gt or you specify value 0, the miner will start auto-tuning to determine the best GT value for each GPU. Note that when the GPU is dual-mining, it ignores the -gt values, and uses -sci instead.

-sci <n>
Set the dual mining intensity (1 to 1000). The default is 30. As you increase the value of -sci, the secondary coin hashrate will increase but the price will be higher power consumption and/or lower ethash hashrate. You can change the this parameter interactively with the '+' and '-' keys in the miner console window. You may specify this option per-GPU. If you set -sci to 0, the miner will use auto-tuning to determine the best value, while trying to maximize the ethash hashrate regardless of the secondary coin hashrate.

-clKernel <n>
Type of OpenCL kernel: 0 - generic, 1 - optimized, 2 - alternative, 3 - turbo (1 is the default)

-clgreen <n>
Use the power-efficient ("green") kernels (0: no, 1: yes; default: 0). You may specify this option per-GPU. Note that you have to run auto-tune again as the optimal GT values are completely different for the green kernels

-clNew <n>
Use the new AMD kernels (0: no, 1: yes; default: 1)

-clf <n>
AMD kernel sync (0: never, 1: periodic; 2: always; default: 1)

-nvKernel <n>
Type of Nvidia kernel: 0 auto (default), 1 old (v1), 2 newer (v2), 3 latest (v3). Note that v3 kernels are only supported on GTX10x0 GPUs. Also note that dual mining is supported only by v2 kernels. You may specify this option per-GPU.

-nvdo <n>
Enable Nvidia driver-specific optimizations (0 - no, the default; 1 - yes). Try -nvdo 1 if your are unstable. You may specify this option per-GPU.

-nvNew <n>
Use new Nvidia kernels if supported (0: no, 1: yes; default: 1)

-nvf <n>
Nvidia kernel sync (0: never, 1: periodic; 2: always; 3: forced; default: 1). You may specify this option per-GPU.

-minRigSpeed <n>
Restart the miner if avg 5 min speed is below <n> MH/s

-eres <n>
Allocate DAG buffers big enough for n epochs ahead (default: 2) to avoid allocating new buffers on each DAG epoch switch, which should improve DAG switch stability

-lidag <n>
Slow down DAG generation to avoid crashes when swiching DAG epochs (0-3, default: 0 - fastest, 3 - slowest).

-gser <n>
Serializing DAG creation on multiple GPUs (0 - no serializing, all GPUs generate the DAG simultaneously, this is the default; 1 - partial overlap of DAG generation on each GPU; 2 - no overalp (each GPU waits until the previous one has finished generating the DAG); 3-10 - from 1 to 8 seconds delay after each GPU DAG generation before the next one)

-gpow <n>
Lower the GPU usage to n% of maximum (default: 100). If you already use -mi 0 (or other low value) use -li instead

-altinit
Use alternative way to initialize AMD cards to prevent startup crashes

-log <n>
Selects the log file mode: 0: disabled - no log file will be written 1: write log file but don't show debug messages on screen (default) 2: write log file and show debug messages on screen

-logfile <name>
Set the name of the logfile. If you place an asterisk (*) in the logfile name, it will be replaced by the current date/time to create a unique name every time PhoenixMiner is started. If there is no asterisk in the logfile name, the new log entries will be added to end of the same file. If you want to use the same logfile but the contents to be overwritten every time when you start the miner, put a dollar sign ($) character in the logfile name (e.g. -logfile my_log.txt$).

-logdir <path>
Set a path where the logfile(s) will be created

-logmaxsize <n>
Maximum size of the logfiles in MB. The default is 200 MB (use 0 to turn off the limitation).On startup, if the logfiles are larger than the specified limit, the oldest are deleted. If you use a single logfile (by using -logfile), then it is truncated if it is bigger than the limit and a new one is created.

-config <name>
Load a file with configuration options that will be added to the command-line options.  Note that the order is important. For example, if we have a config.txt file that contains -cclock 1000 and we specify command line -cclock 1100 -config config.txt, the options from the config.txt file will take precedence and the resulting -cclock will be 1000. If the order is reversed (-config config.txt -cclock 1100) then the second option takes precedence and the resulting -cclock will be 1100. Note that only one -config option is allowed. Also note that if you reload the config file with 'c' key or with the remote interface,  its options will take precedence over whatever you have specified in the command-line.

-li <n>
Another way to lower the GPU usage. Bigger n values mean less GPU utilization; the default is 0.

-resetoc
Reset the hardware overclocking settings on startup.

-leaveoc
Do not reset overclocking settings when closing the miner

-rvram <n>
Minimum free VRAM in MB (-1: don't check; default: 384 for Windows, and 128 for Linux)

-dagrestart <n>
Restart the miner when allocating buffer for a new DAG epoch. The possible values are: 0 - never, 1 - always, 2 - auto (the miner decides depending on the driver version). This is relevant for 4 GB AMD cards, which may have problems with new DAG epochs after epoch 350.

-tt <n>
Set fan control target temperature (special values: 0 - no HW monitoring on ALL cards, 1-4 - only monitoring on all cards with 30-120 seconds interval, negative - fixed fan speed at n %)

-fanmin <n>
Set fan control min speed in % (-1 for default)

-fanmax <n>
Set fan control max speed in % (-1 for default)

-fcm <n>
Set fan control mode (0 - auto, 1 - use VBIOS fan control, 2 - forced fan control; default: 0)

-tmax <n>
Set fan control max temperature (0 for default)

-powlim <n>
Set GPU power limit in % (from -75 to 75, 0 for default)

-cclock <n>
Set GPU core clock in MHz (0 for default). For Nvidia cards use relative values (e.g. -300 or +400)

-cvddc <n>
Set GPU core voltage in mV (0 for default). For Nvidia cards use relative values (e.g. -300 or +400)

-mclock <n>
Set GPU memory clock in MHz (0 for default)

-mvddc <n>
Set GPU memory voltage in mV (0 for default)

-mt <n>
VRAM timings (AMD under Windows only): 0 - default VBIOS values; 1 - faster timings; 2 - fastest timings. The default is 0. This is useful for mining with AMD cards without modding the VBIOS. If you have modded BIOS, it is probably faster than even -mt 2

-tstop <n>
Pause a GPU when temp is >= n deg C (0 for default; i.e. off)

-tstart <n>
Resume a GPU when temp is <= n deg C (0 for default; i.e. off)

-hstats <n>
Level of hardware monitoring: 0 - temperature and fan speed only; 1 - temperature, fan speed, and power; 2 - full (include core/memory clocks, voltages, P-states). The default is 1.
